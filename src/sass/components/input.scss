/**
 * components/input-text.scss
 * @author kaminorse
 */

@use "../variables/index.scss" as variables;

.input {
  background-color: var(--color-default-back);
  border-color: var(--color-default-border);
  border-radius: 0.5rem;
  border-style: solid;
  border-width: var(--border-width-medium);
  padding: 0.5rem;
  &::placeholder {
    color: var(--color-default-placeholder);
  }
  &:focus,
  &.is-focus,
  &.is-focused {
    background-color: var(--color-default-focus-back);
    border-color: var(--color-default-focus-border);
  }
  &[disabled],
  fieldset[disabled],
  &.is-disabled {
    background-color: var(--color-default-disabled-back);
    border-color: var(--color-default-disabled-border);
  }
  @each $color in variables.$colors {
    &.is-#{$color} {
      background-color: var(--color-#{$color}-back);
      border-color: var(--color-#{$color}-border);
      color: var(--color-#{$color}-fore);
      &::placeholder {
        color: var(--color-#{$color}-placeholder);
      }
      &:focus,
      &.is-focus,
      &.is-focused {
        background-color: var(--color-#{$color}-focus-back);
        border-color: var(--color-#{$color}-focus-border);
      }
      &[disabled],
      fieldset[disabled],
      &.is-disabled {
        background-color: var(--color-#{$color}-disabled-back);
        border-color: var(--color-#{$color}-disabled-border);
      }
    }
  }
}

.input-text {
  @extend .input;
}

.input-checkbox {
  @extend .input;
  appearance: none;
  border-radius: 25%;
  cursor: pointer;
  height: 1rem;
  line-height: 1.5;
  position: relative;
  vertical-align: middle;
  width: 1rem;
  &:after {
    background-color: transparent;
    border-color: transparent;
    border-radius: 25%;
    border-style: solid;
    border-width: 0 var(--border-width-medium) var(--border-width-medium) 0;
    content: "";
    display: block;
    height: 1rem;
    left: 0.25rem;
    position: absolute;
    top: -0.33rem;
    transform: rotate(45deg);
    width: 0.5rem;
  }
  &:checked {
    &:after {
      border-color: var(--color-default-fore);
    }
  }
  &[disabled],
  fieldset[disabled],
  &.is-disabled {
    background-color: var(--color-default-disabled-back);
    border-color: var(--color-default-disabled-border);
    &:checked {
      &:after {
        border-color: var(--color-default-disabled-fore);
      }
    }
  }
  @each $color in variables.$colors {
    &.is-#{$color} {
      background-color: var(--color-#{$color}-back);
      border-color: var(--color-#{$color}-border);
      &:checked {
        &:after {
          border-color: var(--color-#{$color}-fore);
        }
      }
      &[disabled],
      fieldset[disabled],
      &.is-disabled {
        background-color: var(--color-#{$color}-disabled-back);
        border-color: var(--color-#{$color}-disabled-border);
        &:checked {
          &:after {
            border-color: var(--color-#{$color}-disabled-fore);
          }
        }
      }
    }
  }
}

.input-radio {
  @extend .input;
  appearance: none;
  border-radius: 50%;
  cursor: pointer;
  height: 1rem;
  line-height: 1.5;
  position: relative;
  vertical-align: middle;
  width: 1rem;
  &:after {
    background-color: transparent;
    border-color: transparent;
    border-radius: 50%;
    border-style: solid;
    border-width: var(--border-width-medium);
    content: "";
    display: block;
    height: 0.5rem;
    left: 0.125rem;
    position: absolute;
    top: 0.125rem;
    width: 0.5rem;
  }
  &:checked {
    &:after {
      background-color: var(--color-default-fore);
      border-color: var(--color-default-fore);
    }
  }
  &[disabled],
  fieldset[disabled],
  &.is-disabled {
    background-color: var(--color-default-disabled-back);
    border-color: var(--color-default-disabled-border);
    &:checked {
      &:after {
        border-color: var(--color-default-disabled-fore);
      }
    }
  }
  @each $color in variables.$colors {
    &.is-#{$color} {
      background-color: var(--color-#{$color}-back);
      border-color: var(--color-#{$color}-border);
      &:checked {
        &:after {
          border-color: var(--color-#{$color}-fore);
        }
      }
      &[disabled],
      fieldset[disabled],
      &.is-disabled {
        background-color: var(--color-#{$color}-disabled-back);
        border-color: var(--color-#{$color}-disabled-border);
        &:checked {
          &:after {
            border-color: var(--color-#{$color}-disabled-fore);
          }
        }
      }
    }
  }
}


.input-color {
  @extend .input;
  height: 2.5rem;
}

.input[type="text"],
.input[type="email"],
.input[type="number"],
.input[type="password"] {
  @extend .input-text;
}

.input[type="checkbox"] {
  @extend .input-checkbox;
}

.input[type="radio"] {
  @extend .input-radio;
}


.input[type="color"] {
  @extend .input-color;
}
